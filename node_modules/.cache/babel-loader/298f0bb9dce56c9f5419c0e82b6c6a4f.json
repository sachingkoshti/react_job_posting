{"ast":null,"code":"var _jsxFileName = \"D:\\\\custom_xampp\\\\htdocs\\\\job_posting\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { useForm } from \"react-hook-form\";\nimport options from './locations_data';\nimport category_list from './category_data';\nimport functional_area_list from './functional_area_data';\nimport './Jobpost.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst selected_locations = [];\n\nfunction TagsInPut() {\n  _s();\n\n  const [tags, setTags] = React.useState([]);\n  return /*#__PURE__*/_jsxDEV(ReactTagInput, {\n    tags: tags,\n    placeholder: \"Type and press enter\",\n    maxTags: 10,\n    editable: true,\n    readOnly: false,\n    removeOnBackspace: true,\n    onChange: newTags => setTags(newTags)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TagsInPut, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n\n_c = TagsInPut;\n\nconst LocationSelection = () => {\n  //  const [setLocationSelection] = [];\n  //  const [selected_locations] = useState([]);\n  function setLocationSelection(input, e) {\n    console.log(input); //        let selected_locations = input;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    multiple: true,\n    id: \"locations\",\n    onChange: this.props.onLocationChange,\n    options: options,\n    placeholder: \"Please add locations here...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = LocationSelection;\n\nconst CategorySelection = () => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    id: \"category_list\",\n    onChange: setSelected,\n    options: category_list,\n    placeholder: \"Please Choose Category\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CategorySelection;\n\nconst FunctionalAreaSelection = () => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    id: \"functional_area_list\",\n    onChange: setSelected,\n    options: category_list,\n    placeholder: \"Please Choose Functional Area\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = FunctionalAreaSelection;\n\nfunction JobForm() {\n  _s2();\n\n  const [year_data] = useState([]);\n  const [full_year_data] = useState([]); //const [setLocationSelection] = useState([]);\n\n  function setLocationSelection(input, e) {\n    // setLocationSelection = (input, e) => {    \n    console.log(input); //        let selected_locations = input;\n  }\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = function (data) {\n    //      console.log(this.props.selected_locations);\n    alert(\"Job Posted Successfully...\");\n    console.log(data);\n  };\n\n  setYearData: {\n    for (var i = 1; i <= 15; i++) {\n      year_data.push(i);\n    }\n\n    var current_year = new Date().getFullYear();\n\n    for (var i = 2000; i <= current_year; i++) {\n      full_year_data.push(i);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-heading\",\n      children: \" Post Job \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"jobpostform\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-heading\",\n        children: \"Basic Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_title\",\n          children: [\"Job Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"job_title\",\n          type: \"text\",\n          ref: register({\n            required: true\n          }),\n          className: \"form-control\",\n          id: \"job_title\",\n          refs: \"job_title\",\n          placeholder: \"Write a title that appropriatly describes the job.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), errors.job_title && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" This is Required \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_locatiion\",\n          children: [\"Locations \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LocationSelection, {\n          onLocationChange: setLocationSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Years of Experience \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"from_experience\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 58\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), errors.from_experience && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"to_experience\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 58\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), errors.to_experience && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_title\",\n          children: [\"Job Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"job_description\",\n          ref: register({\n            required: true\n          }),\n          className: \"form-control\",\n          id: \"job_description\",\n          refs: \"job_description\",\n          placeholder: \"Describe Roles & Responsibilies required for the job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), errors.job_description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" This is Required \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-heading\",\n        children: \"Targeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Category \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CategorySelection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Functional Area \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FunctionalAreaSelection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Graduating Year \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"min_batch\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Min Batch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this), full_year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 63\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), errors.min_batch && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"max_batch\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Max Batch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), full_year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 63\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), errors.max_batch && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_locatiion\",\n          children: [\"Tags \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TagsInPut, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(JobForm, \"nApsDrs2C6l00YXYH4uWEtvKo/I=\", false, function () {\n  return [useForm];\n});\n\n_c5 = JobForm;\nexport default JobForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TagsInPut\");\n$RefreshReg$(_c2, \"LocationSelection\");\n$RefreshReg$(_c3, \"CategorySelection\");\n$RefreshReg$(_c4, \"FunctionalAreaSelection\");\n$RefreshReg$(_c5, \"JobForm\");","map":{"version":3,"sources":["D:/custom_xampp/htdocs/job_posting/src/App.js"],"names":["React","useState","Typeahead","ReactTagInput","useForm","options","category_list","functional_area_list","selected_locations","TagsInPut","tags","setTags","newTags","LocationSelection","setLocationSelection","input","e","console","log","props","onLocationChange","CategorySelection","selected","setSelected","FunctionalAreaSelection","JobForm","year_data","full_year_data","register","handleSubmit","errors","onSubmit","data","alert","setYearData","i","push","current_year","Date","getFullYear","required","job_title","map","d","from_experience","to_experience","job_description","min_batch","max_batch"],"mappings":"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","sourcesContent":["import React, {  useState  } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { useForm } from \"react-hook-form\";\n\nimport options from './locations_data';\nimport category_list from './category_data';\nimport functional_area_list from './functional_area_data';\n\nimport './Jobpost.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nconst selected_locations = [];\n\nfunction TagsInPut() {\n  const [tags, setTags] = React.useState([])\n  return (\n    <ReactTagInput \n      tags={tags} \n      placeholder=\"Type and press enter\"\n      maxTags={10}\n      editable={true}\n      readOnly={false}\n      removeOnBackspace={true}\n      onChange={(newTags) => setTags(newTags)}\n\n    />\n  )\n}\n\nconst LocationSelection = () => {\n//  const [setLocationSelection] = [];\n  //  const [selected_locations] = useState([]);\n    function setLocationSelection(input, e){\n        console.log(input)\n//        let selected_locations = input;\n    }\n\n  return (\n    <Typeahead\n      multiple  \n      id=\"locations\"\n      onChange={this.props.onLocationChange}\n      options={options}\n      placeholder=\"Please add locations here...\"\n    />\n  );\n\n};\n\nconst CategorySelection = () => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      id=\"category_list\"\n      onChange={setSelected}\n      options={category_list}\n      placeholder=\"Please Choose Category\"\n      selected={selected}\n    />\n  );\n};\n\nconst FunctionalAreaSelection = () => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      id=\"functional_area_list\"\n      onChange={setSelected}\n      options={category_list}\n      placeholder=\"Please Choose Functional Area\"\n      selected={selected}\n    />\n  );\n};\n\n\nfunction JobForm()\n{\n    const [year_data] = useState([]);\n    const [full_year_data] = useState([]);\n    //const [setLocationSelection] = useState([]);\n\n\n\n    function setLocationSelection(input, e){\n   // setLocationSelection = (input, e) => {    \n        console.log(input)\n//        let selected_locations = input;\n    }\n\n\n    const {register, handleSubmit, errors} = useForm();\n    const onSubmit = function(data){ \n  //      console.log(this.props.selected_locations);\n        alert(\"Job Posted Successfully...\");\n        console.log(data);\n    }\n\n    setYearData: {\n\n        for (var i = 1; i <=15; i++) {\n            year_data.push(i);\n        }\n\n        var current_year   = new Date().getFullYear();\n\n        for (var i = 2000; i <=current_year; i++) {\n            full_year_data.push(i);\n        }\n    }\n\n        return(\n            <div className='form-body'>\n                <div className='form-heading'> Post Job </div>\n\n                <form name=\"jobpostform\" onSubmit={handleSubmit(onSubmit)}>\n\n                    <div className='sub-heading'> \n                        Basic Details\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"job_title\">\n                            Job Title <span className='required'>*</span> \n                        </label>\n                        <input name=\"job_title\" type=\"text\" ref={register({required: true})} className=\"form-control\" id=\"job_title\" refs=\"job_title\" placeholder=\"Write a title that appropriatly describes the job.\">\n                        </input>\n\n                        {errors.job_title && <p> This is Required </p>}\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"job_locatiion\">\n                            Locations <span className='required'>*</span> \n                        </label>\n                        <LocationSelection onLocationChange={setLocationSelection}></LocationSelection>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>\n                            Years of Experience <span className='required'>*</span> \n                        </label>\n                          <div className=\"row\">\n                            <div className=\"col\">\n                                <select name=\"from_experience\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Select Min</option>\n                                    {year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n\n                                {errors.from_experience && <p> This is Required </p>}\n                            </div>\n                            <div className=\"col\">\n                                <select name=\"to_experience\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Select Max</option>\n                                    {year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n\n                                {errors.to_experience && <p> This is Required </p>}\n                            </div>\n                            \n                          </div>\n\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label for=\"job_title\">\n                            Job Description <span className='required'>*</span> \n                        </label>\n                        <textarea name=\"job_description\" ref={register({required: true})} className=\"form-control\" id=\"job_description\" refs=\"job_description\" placeholder=\"Describe Roles & Responsibilies required for the job\">\n                        </textarea>\n\n                        {errors.job_description && <p> This is Required </p>}\n                    </div>             \n\n                    <div className='sub-heading'> \n                        Targeting\n                    </div>\n\n                    <div className=\"form-group\">\n                      <div className=\"row\">\n                        <div className=\"col\">\n                            <label>\n                                Category <span className='required'>*</span> \n                            </label>\n                            <CategorySelection />\n                        </div>\n                        <div className=\"col\">\n\n                            <label>\n                                Functional Area <span className='required'>*</span> \n                            </label>\n                            <FunctionalAreaSelection />\n                        </div>\n                      </div>\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label>\n                            Graduating Year <span className='required'>*</span> \n                        </label>\n                          <div className=\"row\">\n                            <div className=\"col\">\n                                <select name=\"min_batch\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Min Batch</option>\n                                    {full_year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                                {errors.min_batch && <p> This is Required </p>}\n                            </div>\n                            <div className=\"col\">\n                                <select name=\"max_batch\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Max Batch</option>\n                                    {full_year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                                {errors.max_batch && <p> This is Required </p>}\n                            </div>\n                          </div>\n\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label for=\"job_locatiion\">\n                            Tags <span className='required'>*</span> \n                        </label>\n                        <TagsInPut />\n                    </div>\n\n\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\n                </form>\n            </div>  \n        )\n}\n\nexport default JobForm;\n"]},"metadata":{},"sourceType":"module"}