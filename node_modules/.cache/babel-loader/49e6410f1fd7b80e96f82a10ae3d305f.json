{"ast":null,"code":"var _jsxFileName = \"D:\\\\custom_xampp\\\\htdocs\\\\job_posting\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport options from './locations_data';\nimport category_list from './category_data';\nimport functional_area_list from './functional_area_data';\nimport './Jobpost.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TagsInPut() {\n  _s();\n\n  const [tags, setTags] = React.useState([]);\n  return /*#__PURE__*/_jsxDEV(ReactTagInput, {\n    tags: tags,\n    placeholder: \"Type and press enter\",\n    maxTags: 10,\n    editable: true,\n    readOnly: false,\n    removeOnBackspace: true,\n    onChange: newTags => setTags(newTags)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TagsInPut, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n\n_c = TagsInPut;\n\nconst LocationSelection = () => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    multiple: true,\n    id: \"locations\",\n    onChange: setSelected,\n    options: options,\n    placeholder: \"Please add locations here...\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = LocationSelection;\n\nconst CategorySelection = () => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    id: \"category_list\",\n    onChange: setSelected,\n    options: category_list,\n    placeholder: \"Please Choose Category\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CategorySelection;\n\nconst FunctionalAreaSelection = () => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    id: \"functional_area_list\",\n    onChange: setSelected,\n    options: category_list,\n    placeholder: \"Please Choose Functional Area\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = FunctionalAreaSelection;\n\nclass JobForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      year_data: [],\n      full_year_data: [],\n      fields: {\n        \"jobtitle\": \"\",\n        \"minexp\": \"\",\n        \"maxexp\": \"\",\n        \"jobdescription\": \"\",\n        \"jobcategory\": \"\",\n        \"jobarea\": \"\",\n        \"graduateminyear\": \"\",\n        \"graduatemaxyear\": \"\",\n        \"locations\": \"locations\"\n      },\n      errors: {}\n    };\n  }\n\n  setYearData() {\n    var array = [];\n\n    for (var i = 1; i <= 15; i++) {\n      array.push(i);\n    }\n\n    var full_year_data = [];\n    var current_year = new Date().getFullYear();\n\n    for (var i = 2000; i <= current_year; i++) {\n      full_year_data.push(i);\n    }\n\n    this.setState({\n      year_data: array,\n      full_year_data: full_year_data\n    });\n  }\n\n  componentDidMount() {\n    this.setYearData();\n  }\n\n  handleValidation() {\n    return true;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      alert(\"Form submitted\");\n      var form_data = this.state.fields;\n      console.log(form_data);\n    } else {\n      alert(\"Form has errors.\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-heading\",\n        children: \" Post Job \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"jobpostform\",\n        onSubmit: this.contactSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-heading\",\n          children: \"Basic Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"job_title\",\n            children: [\"Job Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"job_title\",\n            refs: \"job_title\",\n            placeholder: \"Write a title that appropriatly describes the job.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"job_locatiion\",\n            children: [\"Locations \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LocationSelection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Years of Experience \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Select Min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this), this.state.year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: d,\n                  children: d\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 69\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Select Max\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), this.state.year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: d,\n                  children: d\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 69\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"job_title\",\n            children: [\"Job Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"job_description\",\n            refs: \"job_description\",\n            placeholder: \"Describe Roles & Responsibilies required for the job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-heading\",\n          children: \"Targeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Category \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CategorySelection, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Functional Area \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FunctionalAreaSelection, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Graduating Year \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Min Batch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this), this.state.full_year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: d,\n                  children: d\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 74\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Max Batch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this), this.state.full_year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: d,\n                  children: d\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 74\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"job_locatiion\",\n            children: [\"Tags \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TagsInPut, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default JobForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TagsInPut\");\n$RefreshReg$(_c2, \"LocationSelection\");\n$RefreshReg$(_c3, \"CategorySelection\");\n$RefreshReg$(_c4, \"FunctionalAreaSelection\");","map":{"version":3,"sources":["D:/custom_xampp/htdocs/job_posting/src/App.js"],"names":["React","Component","Typeahead","ReactTagInput","options","category_list","functional_area_list","TagsInPut","tags","setTags","useState","newTags","LocationSelection","selected","setSelected","CategorySelection","FunctionalAreaSelection","JobForm","constructor","state","year_data","full_year_data","fields","errors","setYearData","array","i","push","current_year","Date","getFullYear","setState","componentDidMount","handleValidation","contactSubmit","e","preventDefault","alert","form_data","console","log","render","bind","map","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nimport options from './locations_data';\nimport category_list from './category_data';\nimport functional_area_list from './functional_area_data';\n\nimport './Jobpost.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nfunction TagsInPut() {\n  const [tags, setTags] = React.useState([])\n  return (\n    <ReactTagInput \n      tags={tags} \n      placeholder=\"Type and press enter\"\n      maxTags={10}\n      editable={true}\n      readOnly={false}\n      removeOnBackspace={true}\n      onChange={(newTags) => setTags(newTags)}\n\n    />\n  )\n}\n\nconst LocationSelection = () => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      multiple  \n      id=\"locations\"\n      onChange={setSelected}\n      options={options}\n      placeholder=\"Please add locations here...\"\n      selected={selected}\n    />\n  );\n};\n\nconst CategorySelection = () => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      id=\"category_list\"\n      onChange={setSelected}\n      options={category_list}\n      placeholder=\"Please Choose Category\"\n      selected={selected}\n    />\n  );\n};\n\nconst FunctionalAreaSelection = () => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      id=\"functional_area_list\"\n      onChange={setSelected}\n      options={category_list}\n      placeholder=\"Please Choose Functional Area\"\n      selected={selected}\n    />\n  );\n};\n\nclass JobForm extends Component \n{\n    constructor() \n    {\n        super()\n        this.state = \n        {\n            year_data: [],\n            full_year_data: [],\n            fields: {\n                \"jobtitle\": \"\",\n                \"minexp\": \"\",\n                \"maxexp\": \"\",\n                \"jobdescription\": \"\",\n                \"jobcategory\": \"\",\n                \"jobarea\": \"\",\n                \"graduateminyear\": \"\",\n                \"graduatemaxyear\": \"\",\n                \"locations\": \"locations\"\n            },\n            errors: {}\n        }\n    }\n\n    setYearData(){\n\n        var array=[];\n\n        for (var i = 1; i <=15; i++) {\n            array.push(i);\n        }\n\n        var full_year_data = [];\n        var current_year   = new Date().getFullYear();\n\n        for (var i = 2000; i <=current_year; i++) {\n            full_year_data.push(i);\n        }\n\n        this.setState({\n                        year_data : array,\n                        full_year_data : full_year_data\n                    })\n\n    }\n\n    componentDidMount(){\n        this.setYearData()\n    }\n    \n    handleValidation(){\n        return true;\n    }\n\n    contactSubmit(e) {\n        e.preventDefault();\n        if(this.handleValidation()){\n          alert(\"Form submitted\");\n\n          var form_data = this.state.fields;\n\n          console.log(form_data);\n\n        }else{\n          alert(\"Form has errors.\")\n        }\n    }\n\n    render() {\n        return(\n            <div className='form-body'>\n                <div className='form-heading'> Post Job </div>\n\n                <form name=\"jobpostform\"  onSubmit= {this.contactSubmit.bind(this)}>\n\n                    <div className='sub-heading'> \n                        Basic Details\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"job_title\">\n                            Job Title <span className='required'>*</span> \n                        </label>\n                        <input type=\"text\" className=\"form-control\" id=\"job_title\" refs=\"job_title\" placeholder=\"Write a title that appropriatly describes the job.\">\n                        </input>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"job_locatiion\">\n                            Locations <span className='required'>*</span> \n                        </label>\n                        <LocationSelection />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>\n                            Years of Experience <span className='required'>*</span> \n                        </label>\n                          <div className=\"row\">\n                            <div className=\"col\">\n                                <select className=\"form-control\">\n                                    <option selected>Select Min</option>\n                                    {this.state.year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                            </div>\n                            <div className=\"col\">\n                                <select className=\"form-control\">\n                                    <option selected>Select Max</option>\n                                    {this.state.year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                            </div>\n                          </div>\n\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label for=\"job_title\">\n                            Job Description <span className='required'>*</span> \n                        </label>\n                        <textarea className=\"form-control\" id=\"job_description\" refs=\"job_description\" placeholder=\"Describe Roles & Responsibilies required for the job\">\n                        </textarea>\n                    </div>             \n\n                    <div className='sub-heading'> \n                        Targeting\n                    </div>\n\n                    <div className=\"form-group\">\n                      <div className=\"row\">\n                        <div className=\"col\">\n                            <label>\n                                Category <span className='required'>*</span> \n                            </label>\n                            <CategorySelection />\n                        </div>\n                        <div className=\"col\">\n\n                            <label>\n                                Functional Area <span className='required'>*</span> \n                            </label>\n                            <FunctionalAreaSelection />\n                        </div>\n                      </div>\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label>\n                            Graduating Year <span className='required'>*</span> \n                        </label>\n                          <div className=\"row\">\n                            <div className=\"col\">\n                                <select className=\"form-control\">\n                                    <option selected>Min Batch</option>\n                                    {this.state.full_year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                            </div>\n                            <div className=\"col\">\n                                <select className=\"form-control\">\n                                    <option selected>Max Batch</option>\n                                    {this.state.full_year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                            </div>\n                          </div>\n\n                    </div>     \n\n\n                    <div className=\"form-group\">\n                        <label for=\"job_locatiion\">\n                            Tags <span className='required'>*</span> \n                        </label>\n                        <TagsInPut />\n                    </div>\n\n\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\n                </form>\n            </div>  \n        )\n    }\n}\n\nexport default JobForm;\n"]},"metadata":{},"sourceType":"module"}