{"ast":null,"code":"var _jsxFileName = \"D:\\\\custom_xampp\\\\htdocs\\\\job_posting\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { useForm } from \"react-hook-form\";\nimport options from './locations_data';\nimport category_list from './category_data';\nimport functional_area_list from './functional_area_data';\nimport './Jobpost.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nfunction TagsInPut({\n  onTagChange\n}) {\n  _s();\n\n  const [tags, setTags] = React.useState([]); // function updateTags(selected_tags){\n  //       {onTagChange}\n  //       setTags(selected_tags)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(ReactTagInput, {\n    tags: tags,\n    placeholder: \"Type and press enter\",\n    maxTags: 10,\n    editable: false,\n    readOnly: false,\n    removeOnBackspace: true // onChange={(newTags) => setTags(newTags); {onTagChange}}\n    ,\n    onChange: onTagChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TagsInPut, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n\n_c = TagsInPut;\n\nconst LocationSelection = ({\n  onLocationChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    multiple: true,\n    id: \"locations\",\n    onChange: onLocationChange,\n    options: options,\n    placeholder: \"Please add locations here...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = LocationSelection;\n\nconst CategorySelection = ({\n  onCategoryChange\n}) => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    id: \"category_list\",\n    onChange: onCategoryChange,\n    options: category_list,\n    placeholder: \"Please Choose Category\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CategorySelection;\n\nconst FunctionalAreaSelection = ({\n  onFunctionChange\n}) => {\n  const [selected, setSelected] = [];\n  return /*#__PURE__*/_jsxDEV(Typeahead, {\n    id: \"functional_area_list\",\n    onChange: onFunctionChange,\n    options: category_list,\n    placeholder: \"Please Choose Functional Area\",\n    selected: selected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = FunctionalAreaSelection;\n\nfunction JobForm() {\n  _s2();\n\n  const [year_data] = useState([]);\n  const [full_year_data] = useState([]);\n  const [locations_list, updateLocations] = useState([]);\n  const [category_name, updateCateogory] = useState([]);\n  const [functional_area, updateFunctionalArea] = useState([]);\n  const [tags_list, updateTags] = useState([]);\n\n  function setLocationSelection(input, e) {\n    updateLocations(input);\n  }\n\n  function setCategorySelection(input, e) {\n    updateCateogory(input);\n  }\n\n  function setFunctionalSelection(input, e) {\n    updateFunctionalArea(input);\n  }\n\n  function setTagsSelection(input, e) {\n    console.log(input);\n    updateTags(input);\n  }\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = function (data) {\n    if (Object.keys(locations_list).length == 0) {\n      toast.error('Please choose Atleast one location', {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    } else if (Object.keys(category_name).length == 0) {\n      toast.error('Please choose Category', {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    } else if (Object.keys(functional_area).length == 0) {\n      toast.error('Please choose Functional Area', {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    } else {\n      toast.success('Job Posted Successfully', {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n      data['locations'] = locations_list;\n      data['categories'] = category_name;\n      data['functional_area'] = functional_area;\n      console.log(data);\n    }\n  };\n\n  setYearData: {\n    for (var i = 1; i <= 15; i++) {\n      year_data.push(i);\n    }\n\n    var current_year = new Date().getFullYear();\n\n    for (var i = 2000; i <= current_year; i++) {\n      full_year_data.push(i);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-heading\",\n      children: \" Post Job \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"jobpostform\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-heading\",\n        children: \"Basic Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_title\",\n          children: [\"Job Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"job_title\",\n          type: \"text\",\n          ref: register({\n            required: true\n          }),\n          className: \"form-control\",\n          id: \"job_title\",\n          refs: \"job_title\",\n          placeholder: \"Write a title that appropriatly describes the job.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), errors.job_title && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" This is Required \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_locatiion\",\n          children: [\"Locations \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LocationSelection, {\n          onLocationChange: setLocationSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), errors.locations && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Choose Atleast one location \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Years of Experience \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"from_experience\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 58\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), errors.from_experience && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"to_experience\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 58\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), errors.to_experience && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_title\",\n          children: [\"Job Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"job_description\",\n          ref: register({\n            required: true\n          }),\n          className: \"form-control\",\n          id: \"job_description\",\n          refs: \"job_description\",\n          placeholder: \"Describe Roles & Responsibilies required for the job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), errors.job_description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" This is Required \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-heading\",\n        children: \"Targeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Category \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CategorySelection, {\n              onCategoryChange: setCategorySelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Functional Area \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FunctionalAreaSelection, {\n              onFunctionChange: setFunctionalSelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Graduating Year \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"min_batch\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Min Batch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this), full_year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 63\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), errors.min_batch && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"max_batch\",\n              className: \"form-control\",\n              ref: register({\n                required: true\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Max Batch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), full_year_data.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 63\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), errors.max_batch && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This is Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"job_locatiion\",\n          children: [\"Tags \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TagsInPut, {\n          onTagChange: setTagsSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(JobForm, \"tVfNrgYzNhmMZ/RbNrVyBAx6yws=\", false, function () {\n  return [useForm];\n});\n\n_c5 = JobForm;\nexport default JobForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TagsInPut\");\n$RefreshReg$(_c2, \"LocationSelection\");\n$RefreshReg$(_c3, \"CategorySelection\");\n$RefreshReg$(_c4, \"FunctionalAreaSelection\");\n$RefreshReg$(_c5, \"JobForm\");","map":{"version":3,"sources":["D:/custom_xampp/htdocs/job_posting/src/App.js"],"names":["React","useState","Typeahead","ReactTagInput","useForm","options","category_list","functional_area_list","toast","configure","TagsInPut","onTagChange","tags","setTags","LocationSelection","onLocationChange","CategorySelection","onCategoryChange","selected","setSelected","FunctionalAreaSelection","onFunctionChange","JobForm","year_data","full_year_data","locations_list","updateLocations","category_name","updateCateogory","functional_area","updateFunctionalArea","tags_list","updateTags","setLocationSelection","input","e","setCategorySelection","setFunctionalSelection","setTagsSelection","console","log","register","handleSubmit","errors","onSubmit","data","Object","keys","length","error","position","POSITION","BOTTOM_RIGHT","success","setYearData","i","push","current_year","Date","getFullYear","required","job_title","locations","map","d","from_experience","to_experience","job_description","min_batch","max_batch"],"mappings":"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","sourcesContent":["import React, {  useState  } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { useForm } from \"react-hook-form\";\n\nimport options from './locations_data';\nimport category_list from './category_data';\nimport functional_area_list from './functional_area_data';\n\nimport './Jobpost.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure()\n\nfunction TagsInPut({onTagChange}) {\n  const [tags, setTags] = React.useState([])\n\n  // function updateTags(selected_tags){\n  //       {onTagChange}\n  //       setTags(selected_tags)\n  // }\n\n  return (\n    <ReactTagInput \n      tags={tags} \n      placeholder=\"Type and press enter\"\n      maxTags={10}\n      editable={false}\n      readOnly={false}\n      removeOnBackspace={true}\n     // onChange={(newTags) => setTags(newTags); {onTagChange}}\n      onChange={onTagChange}\n    />\n  )\n}\n\nconst LocationSelection = ({onLocationChange}) => {\n\n  return (\n    <Typeahead\n      multiple  \n      id=\"locations\"\n      onChange={onLocationChange}\n      options={options}\n      placeholder=\"Please add locations here...\"\n    />\n  );\n\n};\n\nconst CategorySelection = ({onCategoryChange}) => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      id=\"category_list\"\n      onChange={onCategoryChange}\n      options={category_list}\n      placeholder=\"Please Choose Category\"\n      selected={selected}\n    />\n  );\n};\n\nconst FunctionalAreaSelection = ({onFunctionChange}) => {\n  const [selected, setSelected] = [];\n\n  return (\n    <Typeahead\n      id=\"functional_area_list\"\n      onChange={onFunctionChange}\n      options={category_list}\n      placeholder=\"Please Choose Functional Area\"\n      selected={selected}\n    />\n  );\n};\n\n\nfunction JobForm()\n{\n    const [year_data] = useState([]);\n    const [full_year_data] = useState([]);\n    const [locations_list, updateLocations] = useState([]);\n    const [category_name, updateCateogory] = useState([]);\n    const [functional_area, updateFunctionalArea] = useState([]);\n    const [tags_list, updateTags] = useState([]);\n\n    function setLocationSelection(input, e){\n        updateLocations(input); \n    }\n    function setCategorySelection(input, e){\n        updateCateogory(input); \n    }\n    function setFunctionalSelection(input, e){\n        updateFunctionalArea(input); \n    }\n    function setTagsSelection(input, e){\n        console.log(input);\n        updateTags(input); \n    }\n\n\n    const {register, handleSubmit, errors} = useForm();\n    const onSubmit = function(data){\n\n        if (Object.keys(locations_list).length == 0) {    \n            toast.error('Please choose Atleast one location', \n               {position: toast.POSITION.BOTTOM_RIGHT})\n        } else if(Object.keys(category_name).length == 0) {\n            toast.error('Please choose Category', \n               {position: toast.POSITION.BOTTOM_RIGHT})\n        } else if(Object.keys(functional_area).length == 0) {\n            toast.error('Please choose Functional Area', \n               {position: toast.POSITION.BOTTOM_RIGHT})\n        } \n        else {\n            toast.success('Job Posted Successfully', \n               {position: toast.POSITION.BOTTOM_RIGHT})\n            \n            data['locations']       = locations_list;\n            data['categories']      = category_name;\n            data['functional_area'] = functional_area;\n\n            console.log(data);\n        }\n\n    }\n\n    setYearData: {\n\n        for (var i = 1; i <=15; i++) {\n            year_data.push(i);\n        }\n\n        var current_year   = new Date().getFullYear();\n\n        for (var i = 2000; i <=current_year; i++) {\n            full_year_data.push(i);\n        }\n    }\n\n        return(\n            <div className='form-body'>\n                <div className='form-heading'> Post Job </div>\n\n                <form name=\"jobpostform\" onSubmit={handleSubmit(onSubmit)}>\n\n                    <div className='sub-heading'> \n                        Basic Details\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"job_title\">\n                            Job Title <span className='required'>*</span> \n                        </label>\n                        <input name=\"job_title\" type=\"text\" ref={register({required: true})} className=\"form-control\" id=\"job_title\" refs=\"job_title\" placeholder=\"Write a title that appropriatly describes the job.\">\n                        </input>\n\n                        {errors.job_title && <p> This is Required </p>}\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"job_locatiion\">\n                            Locations <span className='required'>*</span> \n                        </label>\n                        <LocationSelection onLocationChange={setLocationSelection}></LocationSelection>\n                        \n                        {errors.locations && <p> Choose Atleast one location </p>}\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>\n                            Years of Experience <span className='required'>*</span> \n                        </label>\n                          <div className=\"row\">\n                            <div className=\"col\">\n                                <select name=\"from_experience\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Select Min</option>\n                                    {year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n\n                                {errors.from_experience && <p> This is Required </p>}\n                            </div>\n                            <div className=\"col\">\n                                <select name=\"to_experience\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Select Max</option>\n                                    {year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n\n                                {errors.to_experience && <p> This is Required </p>}\n                            </div>\n                            \n                          </div>\n\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label for=\"job_title\">\n                            Job Description <span className='required'>*</span> \n                        </label>\n                        <textarea name=\"job_description\" ref={register({required: true})} className=\"form-control\" id=\"job_description\" refs=\"job_description\" placeholder=\"Describe Roles & Responsibilies required for the job\">\n                        </textarea>\n\n                        {errors.job_description && <p> This is Required </p>}\n                    </div>             \n\n                    <div className='sub-heading'> \n                        Targeting\n                    </div>\n\n                    <div className=\"form-group\">\n                      <div className=\"row\">\n                        <div className=\"col\">\n                            <label>\n                                Category <span className='required'>*</span> \n                            </label>\n                            <CategorySelection onCategoryChange={setCategorySelection}></CategorySelection>\n                        </div>\n                        <div className=\"col\">\n\n                            <label>\n                                Functional Area <span className='required'>*</span> \n                            </label>\n                            <FunctionalAreaSelection onFunctionChange={setFunctionalSelection}></FunctionalAreaSelection>\n                        </div>\n                      </div>\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label>\n                            Graduating Year <span className='required'>*</span> \n                        </label>\n                          <div className=\"row\">\n                            <div className=\"col\">\n                                <select name=\"min_batch\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Min Batch</option>\n                                    {full_year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                                {errors.min_batch && <p> This is Required </p>}\n                            </div>\n                            <div className=\"col\">\n                                <select name=\"max_batch\" className=\"form-control\" ref={register({required: true})}>\n                                    <option value=\"\">Max Batch</option>\n                                    {full_year_data.map(d => (<option value={d}>{d}</option>))}\n                                </select>\n                                {errors.max_batch && <p> This is Required </p>}\n                            </div>\n                          </div>\n\n                    </div>     \n\n                    <div className=\"form-group\">\n                        <label for=\"job_locatiion\">\n                            Tags <span className='required'>*</span> \n                        </label>\n                        <TagsInPut onTagChange={setTagsSelection}></TagsInPut>\n                    </div>\n\n\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\n                </form>\n            </div>  \n        )\n}\n\nexport default JobForm;\n"]},"metadata":{},"sourceType":"module"}